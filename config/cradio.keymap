// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

// Home row mods macro
#define HRML(k1,k2,k3,k4) &ht LGUI  k1 &ht LALT  k2 &ht LSHFT k3 &ht LCTRL k4
#define HRMR(k1,k2,k3,k4) &ht RCTRL k1 &ht RSHFT k2 &ht LALT  k3 &ht RGUI  k4

&sl {
    release-after-ms = <5000>;
};

/ {
    combos {
        compatible = "zmk,combos";

        combo_toggle_ergol {
            timeout-ms = <50>;
            key-positions = <29 30>; // both inner thumb keys
            bindings = <&tog 3>;
        };
    }; // combos
};

/ {
    behaviors {
        ht: hold_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <220>;
            quick-tap-ms = <150>;
            require-prior-idle-ms = <100>;
            bindings = <&kp>, <&kp>;
        };

	// Star key or dead key used to switch to another layer when not shifted
	dead_key: dead_key {
            compatible = "zmk,behavior-mod-morph";
	    #binding-cells = <0>;
            bindings = <&sl 3>, <&kp EXCL>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

    macros {
        minus_qm: minus_question {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp MINUS>, <&kp QUESTION>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

	dot_col: dot_column {
	    compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp DOT>, <&kp COLON>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
	};

 	com_sem: comma_semicolon {
	    compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp COMMA>, <&kp SEMICOLON>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
	};
    };

    keymap {
        compatible = "zmk,keymap";

        // layer 0 is a classic QWERTY sending default key events
        default {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│  Q       │  W       │  E       │  R       │  T       │   │  Y       │  U       │  I       │  O       │  P       │
            &kp Q      &kp W      &kp E      &kp R      &kp T          &kp Y      &kp U      &kp I      &kp O      &kp P
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│  A       │  S       │  D       │  F       │  G       │   │  H       │  J       │  K       │  L       │  :       │
            HRML(A,        S,         D,         F)     &kp G          &kp H      HRMR(J,        K,         L,      SEMI)
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│  Z       │  X       │  C       │  V       │  B       │   │  N       │  M       │ , <      │ . >      │ / ?      │
            &kp Z      &kp X      &kp C      &kp V      &kp B          &kp N      &kp M      &kp COMMA  &kp DOT    &kp FSLH
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                             &kp SPC   &lt 1 BSPC    &lt 2 TAB  &ht RALT RET
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        }; // default

        // layer 1 for numbers and function keys
        num {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│          │          │          │          │          │   │          │          │          │  F11     │  F12     │
             &trans     &trans     &trans     &trans     &trans         &trans     &trans     &trans     &kp F11    &kp F12
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│  1       │  2       │  3       │  4       │  5       │   │  6       │  7       │  8       │  9       │  0       │
            HRML(N1,     N2,        N3,        N4)      &kp N5         &kp N6     HRMR(N7,     N8,        N9,       N0)
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│  F1      │  F2      │  F3      │  F4      │  F5      │   │  F6      │  F7      │  F8      │  F9      │  F10     │
            &kp F1     &kp F2     &kp F3     &kp F4     &kp F5         &kp F6     &kp F7     &kp F8     &kp F9     &kp F10
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                             &trans     &trans         &trans     &trans
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        }; // num

        // layer 2 is for navigation and system
        navsys {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│  ESCAPE  │  home    │  up      │  end     │ page up  │   │PRINT SCRN│  PAUSE   │SCROLL LCK│  INSERT  │UNL STUDIO│
            &kp ESC    &kp HOME    &kp UP     &kp END   &kp PG_UP    &kp PSCRN &kp PAUSE_BREAK &kp SLCK &kp INS   &studio_unlock
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│ CAPS LCK │  left    │  down    │  right   │ page dn  │   │ DELETE   │   CUT    │  COPY    │  PASTE   │ EQUAL    │
           HRML(CAPS,   LEFT,      DOWN,      RIGHT)    &kp PG_DN      &kp DEL    HRMR(K_CUT, K_COPY,    K_PASTE,   EQUAL)
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│BOOTLOADER│  vol-    │  mute    │  vol+    │          │   │BT PROF 0 │ BT next  │ BT clear │          │BOOTLOADER|
         &bootloader &kp C_VOL_DN &kp C_MUTE &kp C_VOL_UP &trans     &bt BT_SEL 0 &bt BT_NXT &bt BT_CLR  &trans   &bootloader
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                             &trans     &trans         &trans     &trans
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        }; // navsys

	// layer 3 is an Ergo-L layout for a US International layout with dead keys
        ergol {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│  Q       │  C       │  O       │  P       │  W       │   │  J       │  M       │  D       │ STAR !   │  Y       │
            &kp Q      &kp C      &kp O      &kp P      &kp W          &kp J      &kp M      &kp D      &dead_key  &kp Y
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│  A       │  S       │  E       │  N       │  F       │   │  L       │  R       │  T       │  I       │  U       │
            HRML(A,        S,         E,         N)     &kp F          &kp L      HRMR(R,        T,         I,        U)
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│  Z       │  X       │  - ?     │  V       │  B       │   │  . :     │  H       │ G        │ , ;      │ K        │
            &kp Z      &kp X      &minus_qm  &kp V      &kp B          &dot_col   &kp H      &kp G      &com_sem   &kp K
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                             &trans     &trans         &trans     &trans
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        }; // ergol
    };
};
